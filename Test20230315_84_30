package Test;

public class Test30 {

	public static void main(String[] args) {
		PowerA powerA = new PowerAImpl();
		work(powerA);
		PowerB powerB = new PowerBImpl();
		Adapter adapter = new Adapter(powerB);
		//work(powerB);
		work(adapter);
		/**
		AnimalFuction w = new Wolf();
		w.run();
		*/
	}
	
	public static void work(PowerA a) {
		System.out.println("正在连接...");
		a.insert();
		System.out.println("工作结束");
	}
}
//适配器
class Adapter implements PowerA{
	private PowerB powerB;
	public Adapter(PowerB powerB) {
		this.powerB = powerB;
	}
	public void insert() {
		powerB.connet();
	}
}

interface PowerB{
	public void connet();
}
class PowerBImpl implements PowerB{
	public void connet() {
		System.out.println("电源B开始工作....");
	}
}
interface PowerA{
	public void insert();
	
}
class PowerAImpl implements PowerA{
	public void insert() {
		System.out.println("电源A开始工作....");
	}
}
/**
interface  Animal1{
	public void run();
	public void sleep();
	public void eat();
	public void cry();
}
abstract class AnimalFuction{
	public void run() {}
	public void sleep() {}
	public void eat() {}
	public void cry() {}
}
class Wolf extends AnimalFuction{
	public void run() {
		System.out.println("修浪勾能跑滴很呀");
	}
	
}
*/
