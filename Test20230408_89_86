package Test;
/**
 * 线程的休眠
 * 在当前线程的执行中，暂停指定的毫秒（/纳秒）数，释放CPU的时间片
 * @author yangzixi
 *
 */
public class Test86_Thread {

	public static void main(String[] args) {
		MyThread mt = new MyThread();
		//推荐
		MyRunnable mr = new MyRunnable();
		Thread t2 = new Thread(mr);
		
		mt.start();//启动线程
		t2.start();
	}

}
/**
 * 实现线程的第一种方式：继承Thread类
 * @author yangzixi
 *
 */
class MyThread extends Thread{
	@Override
	public void run() {
		for(int i = 0;i<50;i++) {
			System.out.println(Thread.currentThread().getName()+"-"+i);//获取当前线程对象
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}
/**
 * 实现线程的第二种方式：实现Runnable接口
 * @author yangzixi
 *
 */
class MyRunnable implements Runnable{

	@Override
	public void run() {
		for(int i = 0;i<50;i++) {
			System.out.println(Thread.currentThread().getName()+"-"+i);
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}	
	}
	
}
