package Test;

import java.util.Scanner;

public class Test36_LoginDemo {

	public static void main(String[] args) {
		Scanner input  = new Scanner(System.in);
		System.out.println("请输入用户名：");
		String name = input.nextLine();
		System.out.println("请输入密码：");
		String pass = input.nextLine();
		
		Test36_UserService us = new Test36_UserService();
		try {
			Test36_User user = us.Login(name,pass);
			System.out.println("登录成功");
			System.out.println(user);
		} catch (Test36_MyException e) {
			e.printStackTrace();
		}
	}

}



package Test;
/**
 * 自定义异常通常都是继承一个异常类来实现
 * 1、Throwable
 * 2、Exception
 * 3、RuntimeException
 * 
 * 自定义异常的实现是，提供构造方法
 * 异常对象本身是没有实际功能，只是一个有意义的标识
*/
public class Test36_MyException extends Exception{

	public Test36_MyException() {
		super();
	}
	public Test36_MyException(String message) {
		super(message);
	}

}



package Test;

public class Test36_User {

	private String username;
	private String password;
	private int age;
	private String sex;
	
	public Test36_User() {
		super();
		
	}
	public Test36_User(String username, String password, int age, String sex) {
		super();
		this.username = username;
		this.password = password;
		this.age = age;
		this.sex = sex;
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public String getSex() {
		return sex;
	}
	public void setSex(String sex) {
		this.sex = sex;
	}
	@Override
	public String toString() {
		return "User [username=" + username + ", password=" + password + ", age=" + age + ", sex=" + sex + "]";
	}
	
}




package Test;

public class Test36_UserService {

	public Test36_User Login(String username,String password)throws Test36_MyException{
		
		if(!"admin".equals(username)) {
			throw new Test36_MyException("用户名错误");
		}
		if(!"12345".equals(password)){
			throw new Test36_MyException("密码错误");
		}
		Test36_User user = new Test36_User("admin","12345",18,"男");
		return user;
		
	} 
}

