package Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Test35_JDK7Demo {

	public static void main(String[] args) {
		//1.5之后
		//Scanner input = new Scanner(System.in);
		//1.5之前接收控制台输入（直接使用IO流）
		
		//1.7新特性
		//自动关闭流
		try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))){
			System.out.println("请输入数字");
			String info = br.readLine();
			int num = Integer.parseInt(info);
			System.out.println(info);
			//br.close();
		} catch (IOException|NumberFormatException e) {
			e.printStackTrace();
		}
		
	}

}


package Test;

import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.zip.DataFormatException;

public class Test35 {

	
	public static void main(String[] args) {
		div(10,2);
		method();
//		div2(20,0);
		input();
		
	}
	//除法运算
	private static void div(int num1,int num2) {
		int[] arr = {1,2,3,4,5};
		try {
			
			System.out.println(arr[4]);
			//arr = null;
			System.out.println(arr.length);
			int result = num1/num2;
			System.out.println("result="+result);
		}catch(ArithmeticException e){//ArithmeticException数学算数异常；
			System.out.println("除数不能为0");
		}catch(ArrayIndexOutOfBoundsException e) {//ArrayIndexOutOfBoundsException数组索引越界异常；
			System.out.println("数组下标越界了");
		}catch(NullPointerException e){//NullPointerException空指针异常；
			System.out.println("空指针异常");
		}catch(Exception e) {
			System.out.println("出错啦");//不知道用哪个异常可用父类Exception；
		}finally {//最终
			System.out.println("程序执行完毕");
		}
		System.out.println("程序结束");
	}
	
	private static int method(){
		int a = 10;
		int b = 5;
		try {
			System.out.println("a="+a);
			System.out.println("b="+b);
			int c = a/b;
			System.out.println("c="+a/b);
			return c;
		}catch(Exception e) {
			//代码测试时使用
			e.printStackTrace();//printStackTrace打印栈内存信息
		}finally {
			System.out.println("finally.");
		}
		return -1;
	}
	//自动或手动抛出异常时，不需要写return；
	private static int div2(int a,int b)throws ArithmeticException{
		try {
			int c = a/b;
			return c;
		}catch(ArithmeticException e) {
			throw new ArithmeticException("除数不能为零");
		}finally {
			System.out.println("运行结束");
		}
 
	}
	private static void input() {
		//command+shift+o;导包
		Scanner input = new Scanner(System.in);
		try {
			int num = input.nextInt();
			System.out.println(num);
		} catch (InputMismatchException e) {//InputMismatchException输入不匹配异常
			System.out.println("输入不匹配");
		}
		
	}
}




