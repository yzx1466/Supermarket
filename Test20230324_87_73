package Test;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.nio.file.StandardOpenOption;

/**
 * JDK1.7新的文件操作类
 * Path接口
 * Paths接口
 * Files接口
 * @author yangzixi
 *
 */
public class Test73_PathFile {

	public static void main(String[] args) {
		File file = new File("/Users/yangzixi/yang/vince.txt");
		
		//Path
		Path p1 = Paths.get("/Users/yangzixi/yang","vince.txt");
		System.out.println(p1);
		
		Path p2 = file.toPath();
		System.out.println(p2);
		
		Path p3 = FileSystems.getDefault().getPath("/Users/yangzixi/yang","vince.txt");
	
		//File工具类
		Path p4 = Paths.get("/Users/yangzixi/yang","vince.txt");
		String info  = "小桥流水人家";
		try {
			//写入文件
			Files.write(p4,info.getBytes("gb2312"),StandardOpenOption.APPEND);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		try {
			//读取文件
			byte[] bytes = Files.readAllBytes(p4);
			System.out.println(new String(bytes));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//复制文件
		try {
			Files.copy(p3, Paths.get("/Users/yangzixi/yang","vince.txt"),StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			e.printStackTrace();
		}
		//移动文件
		try {
			Files.move(p3, Paths.get("/Users/yangzixi/yang","vince.txt"),StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			e.printStackTrace();
		}
		//删除文件
		try {
			Files.delete(p3);////如果path不存在文件将抛出异常，此时调用"static  boolean deleteIfExists(Path path)"
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//创建新目录，除了最后一个部件，其他必须是以存在的
		try {
			Files.createDirectory(Paths.get("/Users/yangzixi/yang"));
			//Files.createDirectories(Path);创建多级不存在目录
		} catch (IOException e) {
			e.printStackTrace();
		}
		//创建文件
		try {
			Files.createFile(Paths.get("/Users/yangzixi/yang"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		//添加前/后缀创建临时文件或临时目录
//		Path newPath  = Files.craeteTempFile(dir,prefix,suffix);
//		Path newPath = Files.createTempDirectory(dir,prefix); 
	}

}

