public class Test45 {

	public static void main(String[] args) {
		
		
		int[] arr = {34,64,53,63,14,57,13,1,45};
		Arrays.sort(arr);
		System.out.println(Arrays.toString(arr));
		
		String[] brr = {"Janin","Mary","Arrays","杨先生","刘先生","韩先生"};
		Arrays.sort(brr);
		System.out.println(Arrays.toString(brr));
		
		Test45_cat[] cats = {new Test45_cat("杨",3),new Test45_cat("楷",2),new Test45_cat("铮",5)};
		Arrays.sort(cats);
		System.out.println(Arrays.toString(cats));
		
		Test45_Dog[] dogs = {new Test45_Dog("杨",3),new Test45_Dog("楷",2),new Test45_Dog("铮",5)};
		Arrays.sort(dogs,new Test45_DogComparator());
		System.out.println(Arrays.toString(dogs));
	}

}



package Test;
/**
 * 自定义对象，要实现比较排序
 * 1、可以实现Comparable的comparaTO方法
 * @author yangzixi
 * @deprecated
 */
public class Test45_cat implements Comparable<Test45_cat>{
	private String name;
	private int age;
	
	public Test45_cat() {
		super();
	}
	public Test45_cat(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	@Override
	public String toString() {
		return "Test45_cat [name=" + name + ", age=" + age + "]";
	}
	@Override
	public int compareTo(Test45_cat o) {
//		if(this.age<o.age)return -1;
//		if(this.age>o.age)return 1;
//		return 0;
		return this.age-o.age;
	}
	
}



package Test;

public class Test45_Dog{
	private String name;
	private int age;
	
	public Test45_Dog() {
		super();
	}
	public Test45_Dog(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	@Override
	public String toString() {
		return "Test45_Dog [name=" + name + ", age=" + age + "]";
	}
	
}



package Test;

import java.util.Comparator;

public class Test45_DogComparator implements Comparator<Test45_Dog>{

	@Override
	public int compare(Test45_Dog o1, Test45_Dog o2) {
		return o1.getAge()-o2.getAge();
	}

}

