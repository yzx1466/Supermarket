package Test;

import java.io.Serializable;
//如果一个类创建对象，需要被序列化，那么该类必须实现Serializable接口
//Serializable是一个标记接口，没有任何定义，为了告诉JVM虚拟机该类对象可以被序列化
//什么时候对象需要被序列化：
//1、把对象保存到文件中（存储到物理介质）
//2、对象需要在网络上传输的时候，也需要被序列化
//如果对象没实现Serializable接口，那么会报错误"java.io.NotSerializableException"
public class Test60_dog_ObjectStream implements Serializable{

	private static final long serialVersionUID = 1L;
	private String name;
	private int age;
	private String sex;
	private transient int id;//在序列化中被忽略
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public String getSex() {
		return sex;
	}
	public void setSex(String sex) {
		this.sex = sex;
	}
	@Override
	public String toString() {
		return "Test60_dog_ObjectStream [name=" + name + ", age=" + age + ", sex=" + sex + "]";
	}
	public Test60_dog_ObjectStream(String name, int age, String sex) {
		super();
		this.name = name;
		this.age = age;
		this.sex = sex;
	}
	public Test60_dog_ObjectStream() {
		super();
		// TODO Auto-generated constructor stub
	}
	
}



package Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;

public class Test60_ObjectStream {

	/**
	 * 反序列化的过程
	 * 从文件中把对象的内容读取出来，还原成对象
	 */
	private static void readObject() {
		File file = new File("/Users/yangzixi/yang/dog.obj");
		try {
			InputStream in = new FileInputStream(file);
			ObjectInputStream ois = new ObjectInputStream(in);
			Test60_dog_ObjectStream[] dog = (Test60_dog_ObjectStream[])ois.readObject();
			ois.close();
			System.out.println(dog);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		
	}
	/**
	 * 对象序列化
	 * 把对象写入文件，实际写入的是类名，属性，属性名，属性类型，属性值等
	 */
	private static void writeObject() {
		Test60_dog_ObjectStream dog = new Test60_dog_ObjectStream("六",2,"母");
		Test60_dog_ObjectStream dog2 = new Test60_dog_ObjectStream("七",3,"母");
		Test60_dog_ObjectStream[] dogs = {dog,dog2};
		File file = new File("/Users/yangzixi/yang/dog.obj");
		
		try {
			OutputStream out = new FileOutputStream(file);
			ObjectOutputStream oos = new ObjectOutputStream(out);
			oos.writeObject(dogs);
			oos.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	public static void main(String[] args) {
		writeObject();
		readObject();
	}

}

